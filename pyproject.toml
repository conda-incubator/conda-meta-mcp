[build-system]
build-backend = "hatchling.build"
requires = ["hatchling>=1.12.2", "hatch-vcs>=0.2.0"]

[project]
classifiers = [
  "Operating System :: OS Independent",
  "License :: OSI Approved :: BSD License",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.13",
]
dependencies = [
  "fastmcp",
]
description = "A Model Context Protocol server providing conda eco system context"
dynamic = ["version"]
keywords = ["conda", "mcp", "llm", "automation"]
name = "conda-meta-mcp"
readme = "README.md"
requires-python = ">=3.13"

[project.scripts]
cmm = "conda_meta_mcp.cli:main"

[tool.coverage.report]
exclude_lines = ["pragma: no cover", "if TYPE_CHECKING:"]

[tool.coverage.run]
branch = true

[tool.hatch.build.hooks.vcs]
version-file = "conda_meta_mcp/_version.py"

[tool.hatch.version]
source = "vcs"

[tool.pixi.dependencies]
argparse-manpage = ">=4.7"
conda = ">=25.7.0"
conda-forge-metadata = "*"
conda-package-streaming = ">=0.12.0"
fastmcp = ">=2.11.3"
libmambapy = ">=2.3.1"

[tool.pixi.environments]
dev = ["test"]

[tool.pixi.feature.test.dependencies]
pixi-diff-to-markdown = "*"
pre-commit = "*"
pytest = "*"
pytest-asyncio = "*"
pytest-cov = ">=7,<8"
pytest-memray = "*"
pytest-mock = "*"
ty = "*"

[tool.pixi.feature.test.tasks]
pixi-diff-to-markdown = 'pixi exec pixi diff-to-markdown'
pre-commit = 'pre-commit run --all-files --color=always'
test = 'python -m pytest'

[tool.pixi.pypi-dependencies]
conda-meta-mcp = {path = ".", editable = true}

[tool.pixi.workspace]
channels = ["conda-forge", "conda-forge/label/ty_alpha"]
platforms = ["linux-64", "osx-arm64"]

[tool.pytest.ini_options]
addopts = """
--cov
--cov-report=html
--show-capture=all
--durations=8
--memray
-vv
"""

[tool.ruff]
line-length = 99
target-version = "py313"

[tool.ruff.format]
docstring-code-format = true
docstring-code-line-length = 88

[tool.ruff.lint]
# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
# see https://docs.astral.sh/ruff/rules/
select = [
  "A",  # flake8-builtins
  "C90",  # mccabe
  "E",  # pycodestyle errors
  "F",  # pyflakes
  "FA",  # flake8-future-annotations
  "I",  # isort
  "ISC",  # flake8-implicit-str-concat
  "PTH",  # flake8-use-pathlib
  "Q",  # flake8-quotes
  "RUF",  # ruff
  "S",  # flake8-bandit
  "SIM",  # flake8-simplify
  "T10",  # flake8-debugger
  "TID251",  # flake8-tidy-imports
  "TC",  # flake8-type-checking
  "UP",  # pyupgrade
  "W",  # pycodestyle warnings
]

[tool.ruff.lint.per-file-ignores]
"tests/**" = ["S"]
